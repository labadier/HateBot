services:

  ### MLflow Server
  mlflow:
    container_name: mlflow_rlabadie
    image: ghcr.io/mlflow/mlflow
    # ports:
    #   - "0.0.0.0:10010:8080"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:8080
    volumes:
      - ./mlruns:/mlflow/mlruns
    command: >
      mlflow server
        --backend-store-uri sqlite:///mlflow/mlruns/mlflow.db
        --default-artifact-root /mlflow/mlruns
        --host 0.0.0.0
        --port 8080
    networks:
      - mlops_net_rlabadie
      - neuronal_external
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlflowrlabadie.rule=Host(`mlflow.rlabadie.neuronalresearch.media.fhstp.ac.at`)"
      - "traefik.http.routers.mlflowrlabadie.entrypoints=web-secure"
      - "traefik.http.routers.mlflowrlabadie.tls=true"
      - "traefik.http.routers.mlflowrlabadie.tls.certresolver=letsencrypt"
      - "traefik.http.services.mlflowrlabadie.loadbalancer.server.port=8080"
      - "traefik.docker.network=neuronal_external"

  ### Training Container
  trainer:
    container_name: trainer_rlabadie
    build:
      context: .
      dockerfile: Dockerfile.train
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:8080
      - EXPERIMENT_NAME=Offensive
      - MODEL_NAME=OffenseBERT
    depends_on:
      - mlflow
    volumes:
      - ./mlruns:/mlflow/mlruns
      - ./dataset:/workspace/dataset
    deploy: 
      resources:
        reservations:
          devices:
            - driver: nvidia 
              device_ids: ["MIG-f9d9db06-9c3c-5e59-a3a2-aa09a85e0d7a"] 
              capabilities: [gpu]
    command: python training.py
    networks:
        - mlops_net_rlabadie

  ### Inference Container
  inference:
    container_name: inference_rlabadie
    build:
      context: ./inference
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:10011:8082"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:8080
      - MODEL_NAME=OffenseBERT
      - PYTHON_PORT=8082
    depends_on:
      - mlflow
    volumes:
      - ./mlruns:/mlflow/mlruns
    command: python app.py 
    networks:
      - mlops_net_rlabadie

networks:
  mlops_net_rlabadie:
    name: mlops_network_rlabadie
    driver: bridge